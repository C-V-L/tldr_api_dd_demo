interactions:
- request:
    body: '{"input": ["file_path: data/tos.txt  The Parties agree that all claims
      and disputes arising under or relating to this Agreement are first to be settled
      by mediation administered by Arbitration Resolution Services (ARS. The parties
      expressly agree to abide by the Mediation Rules & Regulations of ARS as found
      at the ARS website, www.arbresolutions.com. Any unresolved disputes arising
      under or relating to this Agreement are to be settled by binding arbitration.
      The arbitration shall be conducted by ARS and the parties shall be bound by
      any and the applicable arbitration rules of ARS and any award/decision rendered.
      ARS rules can be found at the ARS website. Any decision or award as a result
      of any such arbitration proceeding shall be in writing and shall provide an
      explanation for all decisions. Any such arbitration shall be conducted by an
      arbitrator experienced in [insert industry or legal experience required for
      arbitrator]and shall include a written record of the arbitration hearing. An
      award of arbitration may be confirmed in a court of competent jurisdiction.
      Unless the parties agree otherwise, the same individual will not serve as both
      mediator arbitrator."], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1245'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.1.0
      x-stainless-arch:
      - x64
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.1.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.4
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-ada-002\",\n  \"usage\": {\n    \"prompt_tokens\":
      221,\n    \"total_tokens\": 221\n  }\n}\n"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 86e3782aeed15382-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 02 Apr 2024 20:11:40 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=QrVCfqjyqb9dzEUh6gan8OzCNDyNMU5.mFFWbDFpIX4-1712088700-1.0.1.1-sTLQ5viiffTPmFbVNv86HSBnkslY9po4Q_afoCGJskZT9ehqr1dypHpxiJNmzuBQkAqI8QoGKYCxe8Sz5P1.iQ;
        path=/; expires=Tue, 02-Apr-24 20:41:40 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=JTB_7zvBAo13nMz7UKmTHAUxlid8U8tf.cZjPl5fJPI-1712088700781-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - user-varmxrsajzjcswmfhks7pnk2
      openai-processing-ms:
      - '56'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-remaining-tokens:
      - '999709'
      x-ratelimit-reset-requests:
      - 20ms
      x-ratelimit-reset-tokens:
      - 17ms
      x-request-id:
      - req_22a2fe5a04dbb25c35205d2b64ca49ca
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"input": ["I am providing you the terms and services of a company. You
      are instructed to read these terms of service and to respond to the query I
      have in regard to the terms of service. My query is: How does this terms of
      service address mandatory binding arbitration. Please respond with the information
      in the format of a json string like this:        { \t\t\t\t\"title\": \"areas_of_focus\"         \"impact\":
      \"key information about how this terms of service would effect me in regards
      to this area_of_focus.\",         \"actionable\": \"any steps outlined in the
      terms of service how I, as the consumer can take to protect myself in regards
      to this area_of_focus.\",         \"ranking\": \"On a scale of 1 to 10, with
      1 being the most business friendly and 10 being the most consumer friendly,
      how does this terms of service compare on the issue of this area_of_focus with
      that of the industry standard. Do not include complete sentences such as ''on
      a scale of 1 to 10, this is a 7.'' in that case, just respond 7. You need to
      be succinct.\"       }       where the key ''title'' is mandatory binding arbitration.
      Please make sure that the formatting of the json string is correct and there
      are no additional single or double quotes other than what a json string would
      require. Keep responses to 500 characters or less."], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1391'
      content-type:
      - application/json
      cookie:
      - __cf_bm=QrVCfqjyqb9dzEUh6gan8OzCNDyNMU5.mFFWbDFpIX4-1712088700-1.0.1.1-sTLQ5viiffTPmFbVNv86HSBnkslY9po4Q_afoCGJskZT9ehqr1dypHpxiJNmzuBQkAqI8QoGKYCxe8Sz5P1.iQ;
        _cfuvid=JTB_7zvBAo13nMz7UKmTHAUxlid8U8tf.cZjPl5fJPI-1712088700781-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.1.0
      x-stainless-arch:
      - x64
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.1.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.4
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-ada-002\",\n  \"usage\": {\n    \"prompt_tokens\":
      281,\n    \"total_tokens\": 281\n  }\n}\n"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 86e3782c79205382-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 02 Apr 2024 20:11:40 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - user-varmxrsajzjcswmfhks7pnk2
      openai-processing-ms:
      - '26'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-remaining-tokens:
      - '999676'
      x-ratelimit-reset-requests:
      - 20ms
      x-ratelimit-reset-tokens:
      - 19ms
      x-request-id:
      - req_0e93b3393d1e1d35069340edb83458ad
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"messages": [{"role": "system", "content": "You are an expert Q&A system
      that is trusted around the world.\nAlways answer the query using the provided
      context information, and not prior knowledge.\nSome rules to follow:\n1. Never
      directly reference the given context in your answer.\n2. Avoid statements like
      ''Based on the context, ...'' or ''The context information ...'' or anything
      along those lines."}, {"role": "user", "content": "Context information is below.\n---------------------\nfile_path:
      data/tos.txt\n\nThe Parties agree that all claims and disputes arising under
      or relating to this Agreement are first to be settled by mediation administered
      by Arbitration Resolution Services (ARS. The parties expressly agree to abide
      by the Mediation Rules & Regulations of ARS as found at the ARS website, www.arbresolutions.com.
      Any unresolved disputes arising under or relating to this Agreement are to be
      settled by binding arbitration. The arbitration shall be conducted by ARS and
      the parties shall be bound by any and the applicable arbitration rules of ARS
      and any award/decision rendered. ARS rules can be found at the ARS website.
      Any decision or award as a result of any such arbitration proceeding shall be
      in writing and shall provide an explanation for all decisions. Any such arbitration
      shall be conducted by an arbitrator experienced in [insert industry or legal
      experience required for arbitrator]and shall include a written record of the
      arbitration hearing. An award of arbitration may be confirmed in a court of
      competent jurisdiction. Unless the parties agree otherwise, the same individual
      will not serve as both mediator arbitrator.\n---------------------\nGiven the
      context information and not prior knowledge, answer the query.\nQuery: I am
      providing you the terms and services of a company. You are instructed to read
      these terms of service and to respond to the query I have in regard to the terms
      of service. My query is: How does this terms of service address mandatory binding
      arbitration. Please respond with the information in the format of a json string
      like this: \n      {\n\t\t\t\t\"title\": \"areas_of_focus\"\n        \"impact\":
      \"key information about how this terms of service would effect me in regards
      to this area_of_focus.\",\n        \"actionable\": \"any steps outlined in the
      terms of service how I, as the consumer can take to protect myself in regards
      to this area_of_focus.\",\n        \"ranking\": \"On a scale of 1 to 10, with
      1 being the most business friendly and 10 being the most consumer friendly,
      how does this terms of service compare on the issue of this area_of_focus with
      that of the industry standard. Do not include complete sentences such as ''on
      a scale of 1 to 10, this is a 7.'' in that case, just respond 7. You need to
      be succinct.\"\n      }\n      where the key ''title'' is mandatory binding
      arbitration. Please make sure that the formatting of the json string is correct
      and there are no additional single or double quotes other than what a json string
      would require. Keep responses to 500 characters or less.\nAnswer: "}], "model":
      "gpt-3.5-turbo", "stream": false, "temperature": 0.1}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3158'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.1.0
      x-stainless-arch:
      - x64
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.1.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.4
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    content: "{\n  \"id\": \"chatcmpl-99elpBCHp6tLHoF6VPIzRPYdOyA9b\",\n  \"object\":
      \"chat.completion\",\n  \"created\": 1712088701,\n  \"model\": \"gpt-3.5-turbo-0125\",\n
      \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
      \"assistant\",\n        \"content\": \"{\\n    \\\"title\\\": \\\"mandatory
      binding arbitration\\\",\\n    \\\"impact\\\": \\\"The terms require all disputes
      to be settled by mediation first, then binding arbitration by ARS. The arbitration
      must follow ARS rules and any decision is binding.\\\",\\n    \\\"actionable\\\":
      \\\"Consumers should review ARS Mediation Rules & Regulations on their website.
      They can also ensure the arbitrator is experienced in the relevant industry
      or legal field.\\\",\\n    \\\"ranking\\\": \\\"6\\\"\\n}\"\n      },\n      \"logprobs\":
      null,\n      \"finish_reason\": \"stop\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\":
      613,\n    \"completion_tokens\": 93,\n    \"total_tokens\": 706\n  },\n  \"system_fingerprint\":
      \"fp_b28b39ffa8\"\n}\n"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 86e3782dceb45186-DEN
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 02 Apr 2024 20:11:43 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=PH3YUD0_8jqFHe1EJSnTLRqYtUW9ahnAQiwS8PTOZpA-1712088703-1.0.1.1-JPLprHfQ2ZyANoEmPbIo6BqGfHYxGr30XXaCEgWMaIc1v1G8xZrn9OyIldI6tnslDBMco6Z0rbbiKmXWbI41iw;
        path=/; expires=Tue, 02-Apr-24 20:41:43 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=pX1.f99Cn.cHoO2wuXTfgo.fdUztZw9._mFqHnTfwTA-1712088703079-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0125
      openai-organization:
      - user-varmxrsajzjcswmfhks7pnk2
      openai-processing-ms:
      - '1665'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '60000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '59238'
      x-ratelimit-reset-requests:
      - 8.64s
      x-ratelimit-reset-tokens:
      - 762ms
      x-request-id:
      - req_2190b557b3ee3296706cee187809f625
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"input": ["I am providing you the terms and services of a company. You
      are instructed to read these terms of service and to respond to the query I
      have in regard to the terms of service. My query is: How does this terms of
      service address focus. Please respond with the information in the format of
      a json string like this:        { \t\t\t\t\"title\": \"areas_of_focus\"         \"impact\":
      \"key information about how this terms of service would effect me in regards
      to this area_of_focus.\",         \"actionable\": \"any steps outlined in the
      terms of service how I, as the consumer can take to protect myself in regards
      to this area_of_focus.\",         \"ranking\": \"On a scale of 1 to 10, with
      1 being the most business friendly and 10 being the most consumer friendly,
      how does this terms of service compare on the issue of this area_of_focus with
      that of the industry standard. Do not include complete sentences such as ''on
      a scale of 1 to 10, this is a 7.'' in that case, just respond 7. You need to
      be succinct.\"       }       where the key ''title'' is focus. Please make sure
      that the formatting of the json string is correct and there are no additional
      single or double quotes other than what a json string would require. Keep responses
      to 500 characters or less."], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1343'
      content-type:
      - application/json
      cookie:
      - __cf_bm=QrVCfqjyqb9dzEUh6gan8OzCNDyNMU5.mFFWbDFpIX4-1712088700-1.0.1.1-sTLQ5viiffTPmFbVNv86HSBnkslY9po4Q_afoCGJskZT9ehqr1dypHpxiJNmzuBQkAqI8QoGKYCxe8Sz5P1.iQ;
        _cfuvid=JTB_7zvBAo13nMz7UKmTHAUxlid8U8tf.cZjPl5fJPI-1712088700781-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.1.0
      x-stainless-arch:
      - x64
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.1.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.4
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    content: "{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"object\":
      \"embedding\",\n      \"index\": 0,\n      \"embedding\": \"\"\n
      \   }\n  ],\n  \"model\": \"text-embedding-ada-002\",\n  \"usage\": {\n    \"prompt_tokens\":
      277,\n    \"total_tokens\": 277\n  }\n}\n"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 86e3783afbec5382-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 02 Apr 2024 20:11:43 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - text-embedding-ada-002
      openai-organization:
      - user-varmxrsajzjcswmfhks7pnk2
      openai-processing-ms:
      - '24'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '2999'
      x-ratelimit-remaining-tokens:
      - '999689'
      x-ratelimit-reset-requests:
      - 20ms
      x-ratelimit-reset-tokens:
      - 18ms
      x-request-id:
      - req_e9d0418cd09b16e5948c6b9a06e07e90
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"messages": [{"role": "system", "content": "You are an expert Q&A system
      that is trusted around the world.\nAlways answer the query using the provided
      context information, and not prior knowledge.\nSome rules to follow:\n1. Never
      directly reference the given context in your answer.\n2. Avoid statements like
      ''Based on the context, ...'' or ''The context information ...'' or anything
      along those lines."}, {"role": "user", "content": "Context information is below.\n---------------------\nfile_path:
      data/tos.txt\n\nThe Parties agree that all claims and disputes arising under
      or relating to this Agreement are first to be settled by mediation administered
      by Arbitration Resolution Services (ARS. The parties expressly agree to abide
      by the Mediation Rules & Regulations of ARS as found at the ARS website, www.arbresolutions.com.
      Any unresolved disputes arising under or relating to this Agreement are to be
      settled by binding arbitration. The arbitration shall be conducted by ARS and
      the parties shall be bound by any and the applicable arbitration rules of ARS
      and any award/decision rendered. ARS rules can be found at the ARS website.
      Any decision or award as a result of any such arbitration proceeding shall be
      in writing and shall provide an explanation for all decisions. Any such arbitration
      shall be conducted by an arbitrator experienced in [insert industry or legal
      experience required for arbitrator]and shall include a written record of the
      arbitration hearing. An award of arbitration may be confirmed in a court of
      competent jurisdiction. Unless the parties agree otherwise, the same individual
      will not serve as both mediator arbitrator.\n---------------------\nGiven the
      context information and not prior knowledge, answer the query.\nQuery: I am
      providing you the terms and services of a company. You are instructed to read
      these terms of service and to respond to the query I have in regard to the terms
      of service. My query is: How does this terms of service address focus. Please
      respond with the information in the format of a json string like this: \n      {\n\t\t\t\t\"title\":
      \"areas_of_focus\"\n        \"impact\": \"key information about how this terms
      of service would effect me in regards to this area_of_focus.\",\n        \"actionable\":
      \"any steps outlined in the terms of service how I, as the consumer can take
      to protect myself in regards to this area_of_focus.\",\n        \"ranking\":
      \"On a scale of 1 to 10, with 1 being the most business friendly and 10 being
      the most consumer friendly, how does this terms of service compare on the issue
      of this area_of_focus with that of the industry standard. Do not include complete
      sentences such as ''on a scale of 1 to 10, this is a 7.'' in that case, just
      respond 7. You need to be succinct.\"\n      }\n      where the key ''title''
      is focus. Please make sure that the formatting of the json string is correct
      and there are no additional single or double quotes other than what a json string
      would require. Keep responses to 500 characters or less.\nAnswer: "}], "model":
      "gpt-3.5-turbo", "stream": false, "temperature": 0.1}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3110'
      content-type:
      - application/json
      cookie:
      - __cf_bm=PH3YUD0_8jqFHe1EJSnTLRqYtUW9ahnAQiwS8PTOZpA-1712088703-1.0.1.1-JPLprHfQ2ZyANoEmPbIo6BqGfHYxGr30XXaCEgWMaIc1v1G8xZrn9OyIldI6tnslDBMco6Z0rbbiKmXWbI41iw;
        _cfuvid=pX1.f99Cn.cHoO2wuXTfgo.fdUztZw9._mFqHnTfwTA-1712088703079-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.1.0
      x-stainless-arch:
      - x64
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.1.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.4
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    content: "{\n  \"id\": \"chatcmpl-99elrRNGqqxc2qCdhvsgB0gOSteFm\",\n  \"object\":
      \"chat.completion\",\n  \"created\": 1712088703,\n  \"model\": \"gpt-3.5-turbo-0125\",\n
      \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
      \"assistant\",\n        \"content\": \"{\\n    \\\"title\\\": \\\"focus\\\",\\n
      \   \\\"impact\\\": \\\"The terms require mediation and arbitration through
      a specific service provider, ensuring a structured resolution process.\\\",\\n
      \   \\\"actionable\\\": \\\"Consumers should familiarize themselves with the
      Mediation Rules & Regulations of ARS and the arbitration process outlined in
      the terms.\\\",\\n    \\\"ranking\\\": \\\"6\\\"\\n}\"\n      },\n      \"logprobs\":
      null,\n      \"finish_reason\": \"stop\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\":
      609,\n    \"completion_tokens\": 70,\n    \"total_tokens\": 679\n  },\n  \"system_fingerprint\":
      \"fp_b28b39ffa8\"\n}\n"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 86e3783c1cde5186-DEN
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 02 Apr 2024 20:11:45 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0125
      openai-organization:
      - user-varmxrsajzjcswmfhks7pnk2
      openai-processing-ms:
      - '1461'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '60000'
      x-ratelimit-remaining-requests:
      - '9998'
      x-ratelimit-remaining-tokens:
      - '59250'
      x-ratelimit-reset-requests:
      - 15.001s
      x-ratelimit-reset-tokens:
      - 750ms
      x-request-id:
      - req_ee29ed40ad6ae4ad0314ad1308afb715
    http_version: HTTP/1.1
    status_code: 200
version: 1
